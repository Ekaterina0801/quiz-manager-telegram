package com.Quiz_manager.service

import com.Quiz_manager.domain.Event
import com.Quiz_manager.repository.EventRepository
import com.Quiz_manager.repository.TeamNotificationSettingsRepository
import jakarta.transaction.Transactional

import org.springframework.scheduling.annotation.EnableScheduling
import org.springframework.scheduling.annotation.Scheduled
import org.springframework.stereotype.Service
import java.time.LocalDateTime

@Service
@EnableScheduling
class ReminderService(
    private val eventRepository: EventRepository,
    private val teamNotificationSettingsRepository: TeamNotificationSettingsRepository, private val telegramService: TelegramService
) {

    /**
     * –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å.
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
     */
    @Scheduled(cron = "0 0 9 * * *")
    @Transactional
    fun checkAndSendReminders() {
        val now = LocalDateTime.now()

        val events = eventRepository.findAll()

        for (event in events) {
            val team = event.team
            val settings = teamNotificationSettingsRepository.findByTeamId(team.id) ?: continue

            if (!settings.eventReminderEnabled) continue

            val reminderTime = event.dateTime.minusHours(settings.registrationReminderHoursBeforeEvent.toLong())

            if (now.isAfter(reminderTime) && now.isBefore(event.dateTime)) {
                sendEventReminder(event, team.chatId)
            }
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –≤ Telegram-—á–∞—Ç –∫–æ–º–∞–Ω–¥—ã.
     *
     * @param event –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
     * @param chatId ID Telegram-—á–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
     */
    private fun sendEventReminder(event: Event, chatId: String?) {
        val participants = event.registrations
            .joinToString(separator = "\n") { "üë§ ${it.fullName}" }

        val message = """
        üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏! üîî
        
        üìå –ù–∞–∑–≤–∞–Ω–∏–µ: ${event.name}
        üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${event.dateTime}
        üìç –ú–µ—Å—Ç–æ: ${event.location}
        üìç –ü–æ–¥—Ä–æ–±–Ω–µ–µ: ${event.description}
        üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${event.registrations.size}
        
        üèÖ –£—á–∞—Å—Ç–Ω–∏–∫–∏:
        $participants
    """.trimIndent()

        //telegramService.sendMessageToChannel(chatId, message)
    }

}
